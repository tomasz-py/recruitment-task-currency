{"version":3,"sources":["actions/index.js","types/index.js","components/ExchangeRate/index.js","components/AddTransaction/index.js","helpers/index.js","components/Transaction/index.js","components/TransactionBest/index.js","components/TransactionList/index.js","App.js","serviceWorker.js","reducers/euroReducer.js","reducers/transactionReducer.js","reducers/index.js","index.js"],"names":["addTransaction","payload","type","removeTransaction","updateRate","connect","state","euroRate","dispatch","bindActionCreators","props","react_default","a","createElement","className","placeholder","min","max","step","onChange","e","value","target","length","parseFloat","toFixed","renderHelper","transactions","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","amount","setAmount","_useState5","_useState6","errName","setErrName","_useState7","_useState8","errAmount","setErrAmount","clearState","onSubmit","event","preventDefault","nameValid","amountValid","style","marginTop","roundToTwo","num","Math","round","convertEuroToPLN","map","transaction","index","amountPL","key","data-label","onClick","tmp","o","maxValue","apply","indexOf","findHighest","sumEUR","reduce","partialSum","sumPLN","components_Transaction","components_TransactionBest","App","components_ExchangeRate","components_AddTransaction","TransactionList","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","arguments","undefined","action","concat","toConsumableArray","newState","splice","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b838179.chunk.js","sourcesContent":["import * as types from \"../types\";\r\n\r\nexport const addTransaction = payload => ({\r\n  type: types.ADD_TRANSACTION,\r\n  payload: payload\r\n});\r\n\r\nexport const removeTransaction = payload => ({\r\n  type: types.REMOVE_TRANSACTION,\r\n  payload: payload\r\n});\r\n\r\nexport const updateRate = payload => ({\r\n  type: types.UPDATE_RATE,\r\n  payload: payload\r\n});\r\n","export const UPDATE_RATE = \"UPDATE_RATE\";\r\nexport const ADD_TRANSACTION = \"ADD_TRANSACTION\";\r\nexport const REMOVE_TRANSACTION = \"REMOVE_TRANSACTION\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { updateRate } from \"../../actions\";\r\n\r\nconst ExchangeRate = props => {\r\n  const renderHelper = () => {\r\n    const { updateRate } = props;\r\n\r\n    const onChangeHandler = e => {\r\n      let value = e.target.value;\r\n\r\n      if (value.length < 1) {\r\n        return updateRate(value);\r\n      }\r\n\r\n      value = parseFloat(value);\r\n\r\n      if (value < 0) {\r\n        return updateRate(\"\");\r\n      } else if (value > 100) {\r\n        return updateRate(100.0);\r\n      }\r\n\r\n      value = value.toFixed(4);\r\n      value = parseFloat(value);\r\n      return updateRate(value);\r\n    };\r\n\r\n    return (\r\n      <div className=\"ui labeled input\">\r\n        <div className=\"ui label\">1 EURO =</div>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"0,0000 - 100,0000\"\r\n          min=\"0\"\r\n          max=\"100,0000\"\r\n          step=\"0.0001\"\r\n          onChange={onChangeHandler}\r\n          value={props.euroRate}\r\n        />\r\n        <div className=\"ui label\">PLN</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return renderHelper();\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  euroRate: state.euroRate\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      updateRate\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ExchangeRate);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addTransaction } from \"../../actions\";\r\n\r\nconst AddTransaction = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [errName, setErrName] = useState(false);\r\n  const [errAmount, setErrAmount] = useState(false);\r\n\r\n  const nameValidation = () => {\r\n    if (name.length > 0) {\r\n      return true;\r\n    }\r\n    setErrName(true);\r\n    return false;\r\n  };\r\n\r\n  const amountValidation = () => {\r\n    if (amount > 0) {\r\n      return true;\r\n    }\r\n    setErrAmount(true);\r\n    return false;\r\n  };\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const nameValid = nameValidation();\r\n    const amountValid = amountValidation();\r\n\r\n    if (nameValid && amountValid) {\r\n      props.addTransaction({ name, amount });\r\n      clearState();\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const clearState = () => {\r\n    setAmount(\"\");\r\n    setName(\"\");\r\n    setErrName(false);\r\n    setErrAmount(false);\r\n  };\r\n\r\n  const onAmountChange = e => {\r\n    if (errAmount) setErrAmount(false);\r\n    let value = e.target.value;\r\n    if (value.length === 0) {\r\n      setAmount(value);\r\n      return;\r\n    }\r\n    value = parseFloat(value);\r\n\r\n    if (value > 9999999.99) {\r\n      setAmount(9999999.99);\r\n      return;\r\n    } else if (value < 0) {\r\n      setAmount(\"\");\r\n      return;\r\n    }\r\n\r\n    if (value > 0) {\r\n      value = value.toFixed(2);\r\n      value = parseFloat(value);\r\n      setAmount(value);\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onFormSubmit}\r\n      className=\"ui form\"\r\n      style={{ marginTop: \"10px\" }}\r\n    >\r\n      <div className=\"fields\">\r\n        <div className=\"eight wide field\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Transaction name\"\r\n            onChange={e => {\r\n              setName(e.target.value);\r\n              if (errName) setErrName(false);\r\n            }}\r\n            value={name}\r\n          />\r\n          {errName ? (\r\n            <div className=\"ui pointing red basic label\">\r\n              Name can't be blank!\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n        <div className=\"three wide field\">\r\n          <label>Amount (EUR)</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            placeholder=\"1,00 - 9999999,99\"\r\n            onChange={onAmountChange}\r\n            value={amount}\r\n          />\r\n          <div>\r\n            {errAmount ? (\r\n              <div className=\"ui pointing red basic label\">\r\n                Amount can't be blank!\r\n              </div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"ui primary button\" type=\"submit\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  euroRate: state.euroRate,\r\n  transactions: state.transactions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    {\r\n      addTransaction\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddTransaction);\r\n","export const roundToTwo = num => {\r\n  return +(Math.round(num + \"e+2\") + \"e-2\");\r\n};\r\n\r\nexport const convertEuroToPLN = (amount, euroRate) => {\r\n  return amount * euroRate;\r\n};\r\n\r\nexport const countDecimals = value => {\r\n  if (value.toString().indexOf(\".\") > -1)\r\n    return value.toString().split(\".\")[1].length || 0;\r\n  return 0;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { removeTransaction } from \"../../actions\";\r\nimport { roundToTwo, convertEuroToPLN } from \"../../helpers\";\r\n\r\nconst Transaction = props => {\r\n  const removeTransaction = index => {\r\n    props.removeTransaction(index);\r\n  };\r\n\r\n  const renderList = () => {\r\n    return props.transactions.map((transaction, index) => {\r\n      let amountPL = convertEuroToPLN(transaction.amount, props.euroRate);\r\n      amountPL = roundToTwo(amountPL);\r\n\r\n      return (\r\n        <tr key={index}>\r\n          <td data-label=\"Name\">{transaction.name}</td>\r\n          <td data-label=\"AmountEUR\">{transaction.amount} EUR</td>\r\n          <td data-label=\"AmountPLN\">{amountPL} PLN</td>\r\n          <td data-label=\"delete\" className=\"right aligned\">\r\n            <button\r\n              className=\"ui negative button\"\r\n              onClick={() => removeTransaction(index)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return renderList();\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  euroRate: state.euroRate,\r\n  transactions: state.transactions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ removeTransaction }, dispatch);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Transaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { roundToTwo, convertEuroToPLN } from \"../../helpers\";\r\n\r\nconst TransactionBest = props => {\r\n  const { transactions, euroRate } = props;\r\n\r\n  const findHighest = () => {\r\n    let tmp = transactions.map(function(o) {\r\n      return o.amount;\r\n    });\r\n    let maxValue = Math.max.apply(Math, tmp);\r\n    let index = tmp.indexOf(maxValue);\r\n\r\n    if (index === -1) {\r\n      return 0;\r\n    }\r\n    return index;\r\n  };\r\n\r\n  const renderHelper = () => {\r\n    let index = findHighest();\r\n    if (transactions.length > 0 && index > -1) {\r\n      let amountPL = convertEuroToPLN(transactions[index].amount, euroRate);\r\n      amountPL = roundToTwo(amountPL);\r\n\r\n      return (\r\n        <div className=\"ui message\">\r\n          <div className=\"header\">Highest transaction:</div>\r\n          <p>Name: {transactions[index].name}</p>\r\n          <p>EUR: {transactions[index].amount}</p>\r\n          <p>PLN: {amountPL}</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"ui message\">\r\n          <div className=\"header\">Highest transaction:</div>\r\n          <p>There is no transaction :(</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderHelper();\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  transactions: state.transactions,\r\n  euroRate: state.euroRate\r\n});\r\n\r\nexport default connect(mapStateToProps)(TransactionBest);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Transaction from \"../Transaction\";\r\nimport TransactionBest from \"../TransactionBest\";\r\nimport { roundToTwo } from \"../../helpers\";\r\n\r\nconst Transactions = props => {\r\n  const { transactions } = props;\r\n\r\n  const temp = transactions.map(transaction => {\r\n    return transaction.amount;\r\n  });\r\n  const sumEUR = temp.reduce((partialSum, a) => partialSum + a, 0);\r\n\r\n  const tempPLN = transactions.map(transaction => {\r\n    return roundToTwo(transaction.amount * props.euroRate);\r\n  });\r\n\r\n  const sumPLN = tempPLN.reduce((partialSum, a) => partialSum + a, 0);\r\n\r\n  return (\r\n    <div className=\"ui grid\" style={{ marginTop: \"30px\" }}>\r\n      <div className=\"ten wide column\">\r\n        <table className=\"ui fixed selectable table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Amount (EUR)</th>\r\n              <th>Amount (PLN)</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <Transaction />\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th>Transactions: {transactions.length}</th>\r\n              <th>Total: {roundToTwo(sumEUR)} EUR</th>\r\n              <th>Total: {roundToTwo(sumPLN)} PLN</th>\r\n              <th />\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n      <div className=\"four wide column\">\r\n        <TransactionBest />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  euroRate: state.euroRate,\r\n  transactions: state.transactions\r\n});\r\n\r\nexport default connect(mapStateToProps)(Transactions);\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport ExchangeRate from \"./components/ExchangeRate\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport TransactionList from \"./components/TransactionList\";\n\nfunction App() {\n  return (\n    <div className=\"ui container\" style={{ marginTop: \"50px\" }}>\n      <ExchangeRate />\n      <AddTransaction />\n      <TransactionList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from \"../types\";\r\n\r\nconst euroRate = 4.28;\r\n\r\nexport default (state = euroRate, action) => {\r\n  switch (action.type) {\r\n    case types.UPDATE_RATE:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = [{ name: \"First test transation\", amount: 100.21 }];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_TRANSACTION:\r\n      return [...state, action.payload];\r\n\r\n    case types.REMOVE_TRANSACTION:\r\n      let newState = [...state];\r\n      newState.splice(action.payload, 1);\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport euroReducer from \"./euroReducer\";\r\nimport transactionReducer from \"./transactionReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  euroRate: euroReducer,\r\n  transactions: transactionReducer\r\n});\r\n\r\nexport default reducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}